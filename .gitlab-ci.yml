stages:
  - lint
  - build
  - deploy
  - release

workflow:
  auto_cancel:
    on_new_commit: conservative
  rules:
    - when: always

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  STACK_NAME: "lms"
  STACK_NAME_DEV: 'lms_dev'

  STACK_APP_NAME: "front"
  DOCKERFILE_PATH: "./"
  SSH_PROJECT_PATH: "/home/addamant/projects/lms/lms-front"
  DOCKER_HOST: tcp://192.168.0.45:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2



lint:
  stage: lint
  image: node:21.7.3-alpine3.20
  interruptible: true
  script:
    - yarn
    - yarn run test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  tags:
    - lint

sonarqube-check:
  stage: lint
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
    GIT_DEPTH: "0"  
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
      when: always
    - if: $CI_COMMIT_BRANCH == 'test'
      when: always
    - if: $CI_COMMIT_BRANCH == 'master'
      when: always
  tags:
    - lint


build:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind
  script:
    - docker login -u $ROOT_USER -p $ROOT_USER_TOKEN $CI_REGISTRY
    - docker build -t $TAG_COMMIT -t $TAG_LATEST -f ./docker/$CI_COMMIT_BRANCH/Dockerfile .
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "web"
  tags:
    - front

deploy develop:
  stage: deploy
  script:
    - docker login -u $ROOT_USER -p $ROOT_USER_TOKEN $CI_REGISTRY
    - docker stack deploy --with-registry-auth --resolve-image=always -c docker-compose.develop.yml $STACK_NAME_DEV
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_STATE == "merged"
    - if: $CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "push"
  tags:
    - front

deploy prod:
  stage: deploy
  script:
    - docker login -u $ROOT_USER -p $ROOT_USER_TOKEN $CI_REGISTRY
    - docker stack deploy --with-registry-auth --resolve-image=always -c docker-compose.prod.yml $STACK_NAME
  only:
    - master
  tags:
    - front